{"version":3,"file":"chek-is-user-confirmed.middleware.js","sourceRoot":"","sources":["../../../src/middleware/user/chek-is-user-confirmed.middleware.ts"],"names":[],"mappings":";;;AACA,yCAAwD;AAExD,+CAAwE;AAE3D,QAAA,8BAA8B,GACvC,CAAC,GAA6B,EAAE,GAAa,EAAE,IAAkB,EAAuB,EAAE;IACxF,MAAM,EAAC,MAAM,EAAC,GAAG,GAAG,CAAC,IAAqB,CAAC;IAE3C,IAAI,MAAM,KAAK,0BAAc,CAAC,SAAS,EAAE;QACvC,OAAO,IAAI,CAAC,IAAI,qBAAY,CAC1B,mCAAuB,CAAC,SAAS,EACjC,qBAAY,CAAC,4BAA4B,CAAC,OAAO,EACjD,qBAAY,CAAC,4BAA4B,CAAC,IAAI,CAC/C,CAAC,CAAC;KACJ;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import {NextFunction, Response} from 'express';\r\nimport {customErrors, ErrorHandler} from '../../errors';\r\nimport {RequestExtendedInterface, UserInterface} from '../../models';\r\nimport {ResponseStatusCodesEnum, UserStatusEnum} from '../../constants';\r\n\r\nexport const checkIsUserConfirmedMiddleware =\r\n    (req: RequestExtendedInterface, res: Response, next: NextFunction): void | NextFunction => {\r\n      const {status} = req.user as UserInterface;\r\n\r\n      if (status !== UserStatusEnum.CONFIRMED) {\r\n        return next(new ErrorHandler(\r\n          ResponseStatusCodesEnum.FORBIDDEN,\r\n          customErrors.FORBIDDEN_USER_NOT_CONFIRMED.message,\r\n          customErrors.FORBIDDEN_USER_NOT_CONFIRMED.code\r\n        ));\r\n      }\r\n      next();\r\n    };\r\n"]}