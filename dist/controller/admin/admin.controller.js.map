{"version":3,"file":"admin.controller.js","sourceRoot":"","sources":["../../../src/controller/admin/admin.controller.ts"],"names":[],"mappings":";;;AACA,2BAA2B;AAE3B,6CAA4C;AAC5C,iDAAmD;AACnD,2CAA2C;AAE3C,MAAM,eAAe;IACnB,KAAK,CAAC,WAAW,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC/D,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;QAEvB,MAAM,EAAC,KAAK,EAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,8BAAiB,CAAC,CAAC;QAEvD,IAAI,KAAK,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAClD;QAED,KAAK,CAAC,QAAQ,GAAG,MAAM,sBAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEpD,MAAM,uBAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEtC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;CACF;AAEY,QAAA,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC","sourcesContent":["import {NextFunction, Request, Response} from 'express';\r\nimport * as Joi from 'joi';\r\n\r\nimport {adminService} from '../../services';\r\nimport {newAdminValidator} from '../../validators';\r\nimport {hashPassword} from '../../helpers';\r\n\r\nclass AdminController {\r\n  async createAdmin(req: Request, res: Response, next: NextFunction) {\r\n    const admin = req.body;\r\n\r\n    const {error} = Joi.validate(admin, newAdminValidator);\r\n\r\n    if (error) {\r\n      return next(new Error(error.details[0].message));\r\n    }\r\n\r\n    admin.password = await hashPassword(admin.password);\r\n\r\n    await adminService.createAdmin(admin);\r\n\r\n    res.sendStatus(201);\r\n  }\r\n}\r\n\r\nexport const adminController = new AdminController();\r\n"]}