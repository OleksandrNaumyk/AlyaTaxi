{"version":3,"file":"user.controller.js","sourceRoot":"","sources":["../../../src/controller/user/user.controller.ts"],"names":[],"mappings":";;;AACA,2BAA2B;AAI3B,2CAA2C;AAC3C,6CAA2C;AAC3C,iDAAkD;AAElD,MAAM,cAAc;IAClB,KAAK,CAAC,UAAU,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC9D,MAAM,IAAI,GAAG,GAAG,CAAC,IAAqB,CAAC;QAEvC,MAAM,EAAC,KAAK,EAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,6BAAgB,CAAC,CAAC;QAErD,IAAI,KAAK,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElD,MAAM,sBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEnC,gEAAgE;QAEhE,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,WAAW,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,GAAG,CAAC,GAAG,EAAE,CAAC;IACZ,CAAC;CACF;AAEY,QAAA,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC","sourcesContent":["import {NextFunction, Request, Response} from 'express';\r\nimport * as Joi from 'joi';\r\n\r\n//import {ActionEnum} from '../../constants';\r\nimport {UserInterface} from '../../models';\r\nimport {hashPassword} from '../../helpers';\r\nimport {userService} from '../../services';\r\nimport {newUserValidator} from '../../validators';\r\n\r\nclass UserController {\r\n  async createUser(req: Request, res: Response, next: NextFunction) {\r\n    const user = req.body as UserInterface;\r\n\r\n    const {error} = Joi.validate(user, newUserValidator);\r\n\r\n    if (error) {\r\n      return next(new Error(error.details[0].message));\r\n    }\r\n\r\n    user.password = await hashPassword(user.password);\r\n\r\n    await userService.createUser(user);\r\n\r\n    //   const {access_token} = tokinizer(ActionEnum.USER_REGISTER);\r\n\r\n    res.sendStatus(201);\r\n  }\r\n\r\n  confirmUser(req: Request, res: Response, next: NextFunction) {\r\n    res.end();\r\n  }\r\n}\r\n\r\nexport const userController = new UserController();\r\n"]}