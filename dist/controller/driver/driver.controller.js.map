{"version":3,"file":"driver.controller.js","sourceRoot":"","sources":["../../../src/controller/driver/driver.controller.ts"],"names":[],"mappings":";;;AACA,2BAA2B;AAE3B,6CAA6C;AAC7C,iDAAoD;AACpD,2CAA2C;AAE3C,MAAM,gBAAgB;IACpB,KAAK,CAAC,YAAY,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAChE,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;QAExB,MAAM,EAAC,KAAK,EAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,+BAAkB,CAAC,CAAC;QAEzD,IAAI,KAAK,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAClD;QAED,MAAM,CAAC,QAAQ,GAAG,MAAM,sBAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEtD,MAAM,wBAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAEzC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;CACF;AAEY,QAAA,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC","sourcesContent":["import {NextFunction, Request, Response} from 'express';\r\nimport * as Joi from 'joi';\r\n\r\nimport {driverService} from '../../services';\r\nimport {newDriverValidator} from '../../validators';\r\nimport {hashPassword} from '../../helpers';\r\n\r\nclass DriverController {\r\n  async createDriver(req: Request, res: Response, next: NextFunction) {\r\n    const driver = req.body;\r\n\r\n    const {error} = Joi.validate(driver, newDriverValidator);\r\n\r\n    if (error) {\r\n      return next(new Error(error.details[0].message));\r\n    }\r\n\r\n    driver.password = await hashPassword(driver.password);\r\n\r\n    await driverService.createDriver(driver);\r\n\r\n    res.sendStatus(201);\r\n  }\r\n}\r\n\r\nexport const driverController = new DriverController();\r\n"]}