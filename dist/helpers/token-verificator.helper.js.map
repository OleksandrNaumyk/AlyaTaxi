{"version":3,"file":"token-verificator.helper.js","sourceRoot":"","sources":["../../src/helpers/token-verificator.helper.ts"],"names":[],"mappings":";;;AAAA,oCAAoC;AACpC,+BAA+B;AAE/B,4CAAiE;AACjE,sCAAiC;AACjC,sCAAuC;AAEvC,MAAM,MAAM,GAAG,gBAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAExB,QAAA,gBAAgB,GAAG,KAAK,EAAE,MAAkB,EAAE,KAAa,EAAoB,EAAE;IAE5F,IAAI,OAAO,GAAE,KAAK,CAAC;IAEnB,QAAQ,MAAM,EAAE;QACd,KAAK,sBAAU,CAAC,aAAa;YAC3B,OAAO,GAAG,MAAM,MAAM,CAAC,KAAK,EAAE,eAAM,CAAC,wBAAwB,CAAY,CAAC;YAC1E,MAAM;QAER,KAAK,sBAAU,CAAC,eAAe;YAC7B,OAAO,GAAG,MAAM,MAAM,CAAC,KAAK,EAAE,eAAM,CAAC,qBAAqB,CAAY,CAAC;YACvE,MAAM;QAER;YACE,MAAM,IAAI,qBAAY,CAAC,mCAAuB,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;KAC/E;IAED,OAAO,OAAO,CAAC;AAEjB,CAAC,CAAC","sourcesContent":["import * as jwt from 'jsonwebtoken';\r\nimport {promisify} from 'util';\r\n\r\nimport {ActionEnum, ResponseStatusCodesEnum} from '../constants';\r\nimport {config} from '../config';\r\nimport {ErrorHandler} from '../errors';\r\n\r\nconst verify = promisify(jwt.verify);\r\n\r\nexport const tokenVerificator = async (action: ActionEnum, token: string): Promise<boolean> => {\r\n\r\n  let isValid =false;\r\n\r\n  switch (action) {\r\n    case ActionEnum.USER_REGISTER:\r\n      isValid = await verify(token, config.JWT_CONFIRM_EMAIL_SECRET) as boolean;\r\n      break;\r\n\r\n    case ActionEnum.FORGOT_PASSWORD:\r\n      isValid = await verify(token, config.JWT_PASS_RESET_SECRET) as boolean;\r\n      break;\r\n\r\n    default:\r\n      throw new ErrorHandler(ResponseStatusCodesEnum.SERVER, 'wrong Action type');\r\n  }\r\n\r\n  return isValid;\r\n\r\n};\r\n"]}