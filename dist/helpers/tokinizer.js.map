{"version":3,"file":"tokinizer.js","sourceRoot":"","sources":["../../src/helpers/tokinizer.ts"],"names":[],"mappings":";;;AAAA,oCAAoC;AAEpC,4CAAiE;AACjE,sCAAiC;AACjC,sCAAuC;AAE1B,QAAA,SAAS,GAAG,CAAC,MAAkB,EAAiD,EAAE;IAC7F,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,aAAa,GAAG,EAAE,CAAC;IAEvB,QAAQ,MAAM,EAAE;QACd,KAAK,sBAAU,CAAC,SAAS;YACvB,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,eAAM,CAAC,UAAU,EAAE,EAAC,SAAS,EAAE,eAAM,CAAC,qBAAqB,EAAC,CAAC,CAAC;YAC1F,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,eAAM,CAAC,kBAAkB,EAAE,EAAC,SAAS,EAAE,eAAM,CAAC,sBAAsB,EAAC,CAAC,CAAC;YACpG,MAAM;QAER,KAAK,sBAAU,CAAC,aAAa;YAC3B,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,eAAM,CAAC,wBAAwB,EAAE,EAAC,SAAS,EAAE,eAAM,CAAC,0BAA0B,EAAC,CAAC,CAAC;YAC7G,MAAM;QAER,KAAK,sBAAU,CAAC,eAAe;YAC7B,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,eAAM,CAAC,qBAAqB,EAAE,EAAC,SAAS,EAAE,eAAM,CAAC,uBAAuB,EAAC,CAAC,CAAC;YACvG,MAAM;QAER;YACE,MAAM,IAAI,qBAAY,CAAC,mCAAuB,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;KAC/E;IAED,OAAO;QACL,YAAY;QACZ,aAAa;KACd,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as jwt from 'jsonwebtoken';\r\n\r\nimport {ActionEnum, ResponseStatusCodesEnum} from '../constants';\r\nimport {config} from '../config';\r\nimport {ErrorHandler} from '../errors';\r\n\r\nexport const tokinizer = (action: ActionEnum): {access_token: string, refresh_token: string} => {\r\n  let access_token = '';\r\n  let refresh_token = '';\r\n\r\n  switch (action) {\r\n    case ActionEnum.USER_AUTH:\r\n      access_token = jwt.sign({}, config.JWT_SECRET, {expiresIn: config.ACCESS_TOKEN_LIFETIME});\r\n      refresh_token = jwt.sign({}, config.JWT_REFRESH_SECRET, {expiresIn: config.REFRESH_TOKEN_LIFETIME});\r\n      break;\r\n\r\n    case ActionEnum.USER_REGISTER:\r\n      access_token = jwt.sign({}, config.JWT_CONFIRM_EMAIL_SECRET, {expiresIn: config.JWT_CONFIRM_EMAIL_LIFETIME});\r\n      break;\r\n\r\n    case ActionEnum.FORGOT_PASSWORD:\r\n      access_token = jwt.sign({}, config.JWT_PASS_RESET_SECRET, {expiresIn: config.JWT_PASS_RESET_LIFETIME});\r\n      break;\r\n\r\n    default:\r\n      throw new ErrorHandler(ResponseStatusCodesEnum.SERVER, 'wrong Action type');\r\n  }\r\n\r\n  return {\r\n    access_token,\r\n    refresh_token\r\n  };\r\n};\r\n"]}